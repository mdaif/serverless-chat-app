service: serverless-chat-app
# app and org for use with dashboard.serverless.com
# app: serverless-chat-app
# org: daif.me

plugins:
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CONNECTIONS_TABLE}

  environment:
    CONNECTIONS_TABLE: Chat-WS-Connections-${self:provider.stage}

functions:
    
  ConnectHandler:
      handler: src/lambda/websocket/connect.handler
      events:
        - websocket:
            route: $connect

  DisconnectHandler:
    handler: src/lambda/websocket/disconnect.handler
    events:
      - websocket:
          route: $disconnect

  BroadcastHandler:
    environment:
      STAGE: ${self:provider.stage}
      REGION: ${self:provider.region}
      API_ID:
        Ref: WebsocketsApi
    handler: src/lambda/websocket/broadcast.handler
    events:
      - websocket:
          route: $default
          
resources:
  Resources:
    WebSocketConnectionsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.CONNECTIONS_TABLE}
